
<link rel="stylesheet" href="~/css/browser.css">
<div class="container">
    <h1>Messages by Period</h1>

    <!-- Form for selecting the time period -->
    <div class="form-group">
        <label for="startTime">Start Time:</label>
        <input type="datetime-local" id="startTime">
    </div>
    <div class="form-group">
        <label for="endTime">End Time:</label>
        <input type="datetime-local" id="endTime">
    </div>
    <button onclick="fetchMessages()">Fetch Messages</button>

    <!-- List of messages -->
    <div class="messages-list">
        <h2>Messages</h2>
        <div id="messages"></div>
    </div>
</div>

<script>
    const apiBaseUrl = '/api/v1/messages';

    // Function to format date to ISO string
    function formatDate(date) {
        return date.toISOString().slice(0, 16);
    }

    // Set default time range (last 10 minutes)
    const now = new Date();
    const tenMinutesForward = new Date(now.getTime() + 10 * 60000);

    document.getElementById('startTime').value = formatDate(now);
    document.getElementById('endTime').value = formatDate(tenMinutesForward);

    // Function to fetch and display messages
    async function fetchMessages() {
        const startTime = document.getElementById('startTime').value;
        const endTime = document.getElementById('endTime').value;

        const url = `${apiBaseUrl}?StartTime=${startTime}&EndTime=${endTime}`;
        const response = await fetch(url);
        const messages = await response.json();
        const messagesContainer = document.getElementById('messages');
        messagesContainer.innerHTML = '';

        messages.forEach(message => {
            const messageElement = document.createElement('div');
            messageElement.className = 'message-item';
            messageElement.innerHTML = `
                        <h3>Message ID: ${message.id}</h3>
                        <p>Text: ${message.text}</p>
                        <p>Number: ${message.number}</p>
                        <p>Created At: ${message.createdAt}</p>
                    `;
            messagesContainer.appendChild(messageElement);
        });
    }

    // Fetch messages on page load
    fetchMessages();
</script>